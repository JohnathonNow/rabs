PLATFORM := defined("PLATFORM") or shell("uname"):trim
DEBUG := defined("DEBUG")

CFLAGS := []
LDFLAGS := []
PREBUILDS := []

c_compile := fun(Source, Object) do
	execute('cc -c {CFLAGS} -o{Object} {Source}')
end

c_includes := fun(Target) do
	var Lines := shell('cc -c {CFLAGS} -M -MG {Target:source}')
	var Files := Lines:trim:replace(r"\\\n ", "") / r"[^\\]( +)"
	Files:pop
	for File in Files do
		File := file(File:replace(r"\\ ", " "))
	end
	return Files
end

var SourceTypes := {
	"c" is [c_includes, c_compile]
}

c_program := fun(Executable, Objects, Libraries) do
	Objects := Objects or []
	Libraries := Libraries or []
	var Sources := []
	for Object in Objects do
		for Extension, Functions in SourceTypes do
			var Source := Object % Extension
			if Source:exists then
				Sources:put(Source)
				var Scan := Source:scanr("INCLUDES")[PREBUILDS] => Functions[1]
				Object[Source, Scan] => (Functions[2] !! [Source])
				exit
			end
		end
	end
	Executable[Objects, Libraries] => fun(Executable) do
		execute('cc', '-o', Executable, Objects, Libraries, LDFLAGS)
		DEBUG or execute('strip', Executable)
	end
end