-- ROOT --

c_compile := fun(Object)
	var Source := Object % "c"
	execute('gcc -c {CFLAGS} -o {Object} -I {Source.dir} {Source}') 
end

c_includes := fun(Source)
	return []
end

asm_compile := fun(Object)
end

asm_includes := fun(Source)
	return []
end

c_program := fun(Executable, Objects, Libraries)
	for Object in Objects do
		var SourceC := Object % "c"
		var SourceAsm := Object % "asm"
		if SourceC.exists then
			var ScanC := SourceC.scan("INCLUDES", c_includes)
			Object[SourceC, ScanC] => c_compile
		elseif SourceAsm.exists then
			var ScanAsm := SourceAsm.scan("INCLUDES", asm_includes)
			Object[SourceAsm, ScanAsm] => asm_compile
		end
	end
	Executable[Objects, Libraries] => fun(Executable)
		execute('gcc -o {Executable} {Objects} {Libraries} {LDFLAGS}')
	end
	DEFAULT[Executable]
end

subdir("src")

